events {  }
http {
    default_type  application/octet-stream;
    include       /etc/nginx/mime.types;
    charset   utf-8;
    keepalive_timeout  65;
    server_tokens       off;
    tcp_nopush          on;
    tcp_nodelay         off;

    ssl_certificate     /certs/MyCertificate.crt;
    ssl_certificate_key /certs/MyKey.key;
    ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_protocols       TLSv1.1 TLSv1.2;

  server {
    # Port
    listen 80;

    listen              443 ssl default_server;
    listen              [::]:443 ssl default_server ;


    ## Uncomment this section for SSL and comment "listen 80" when enabling SSL ##
    #listen 443 ssl;
    #listen [::]:443 ssl;

    #sl_certificate /certs/MyCertificate.crt;
    #ssl_certificate_key /certs/MyKey.pem;

    # Root
    root /var/www;
    # File to server
    index index.html index.htm;

    location / {
      try_files $uri $uri/ /index.html = 404;
    }

    # API location
    location /api/ {
      # Pass the location
      proxy_pass http://authentication:8080/Kwetter/;
      # Pass the csrf token
      proxy_pass_header X-XSRF-TOKEN;
      # Set headers
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # WebSocket support (nginx 1.4)
      proxy_read_timeout 1m;
      proxy_http_version 1.1;
    }

    # Websocket Location
    location /update/ {
      # Pass the location
      proxy_pass http://update_server:8080/Kwetter/update;
      proxy_http_version 1.1;
      proxy_buffering off;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }
  }
}
